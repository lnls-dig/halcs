#ifndef __CHEBY__WB_FOFB_PROCESSING_REGS__H__
#define __CHEBY__WB_FOFB_PROCESSING_REGS__H__
#define WB_FOFB_PROCESSING_REGS_SIZE 16 /* 0x10 */

/* RAM write register */

#define WB_FOFB_PROCESSING_REGS_RAM_WRITE 0x0UL
#define WB_FOFB_PROCESSING_REGS_RAM_WRITE_ENABLE 0x1UL

#define WB_FOFB_PROCESSING_REG_RAM_WRITE             WB_FOFB_PROCESSING_REGS_RAM_WRITE 
#define WB_FOFB_PROCESSING_REG_RAM_WRITE_ENABLE      WB_FOFB_PROCESSING_REGS_RAM_WRITE_ENABLE
#define WB_FOFB_PROCESSING_RAM_WRITE_ENABLE      WB_FOFB_PROCESSING_REG_RAM_WRITE_ENABLE

/* RAM data input register */

#define WB_FOFB_PROCESSING_REGS_RAM_DATA_IN 0x4UL
#define WB_FOFB_PROCESSING_REGS_RAM_DATA_IN_VAL_MASK 0xffffffffUL
#define WB_FOFB_PROCESSING_REGS_RAM_DATA_IN_VAL_SHIFT 0

#define WB_FOFB_PROCESSING_REG_RAM_DATA_IN           WB_FOFB_PROCESSING_REGS_RAM_DATA_IN
#define WB_FOFB_PROCESSING_RAM_DATA_IN_VAL           WB_FOFB_PROCESSING_REG_RAM_DATA_IN
#define WB_FOFB_PROCESSING_RAM_DATA_IN_VAL_MASK      WB_FOFB_PROCESSING_REGS_RAM_DATA_IN_VAL_MASK
#define WB_FOFB_PROCESSING_RAM_DATA_IN_VAL_SHIFT     WB_FOFB_PROCESSING_REGS_RAM_DATA_IN_VAL_SHIFT
#define WB_FOFB_PROCESSING_RAM_DATA_IN_VAL_R(val)    ((val & WB_FOFB_PROCESSING_RAM_DATA_IN_VAL_MASK) >> WB_FOFB_PROCESSING_RAM_DATA_IN_VAL_SHIFT)
#define WB_FOFB_PROCESSING_RAM_DATA_IN_VAL_W(val)    ((val & WB_FOFB_PROCESSING_RAM_DATA_IN_VAL_MASK) << WB_FOFB_PROCESSING_RAM_DATA_IN_VAL_SHIFT)

/* RAM data output register */

#define WB_FOFB_PROCESSING_REGS_RAM_DATA_OUT 0x8UL
#define WB_FOFB_PROCESSING_REGS_RAM_DATA_OUT_VAL_MASK 0xffffffffUL
#define WB_FOFB_PROCESSING_REGS_RAM_DATA_OUT_VAL_SHIFT 0

#define WB_FOFB_PROCESSING_REG_RAM_DATA_OUT          WB_FOFB_PROCESSING_REGS_RAM_DATA_OUT
#define WB_FOFB_PROCESSING_RAM_DATA_OUT_VAL          WB_FOFB_PROCESSING_REG_RAM_DATA_OUT
#define WB_FOFB_PROCESSING_RAM_DATA_OUT_VAL_MASK     WB_FOFB_PROCESSING_REGS_RAM_DATA_OUT_VAL_MASK
#define WB_FOFB_PROCESSING_RAM_DATA_OUT_VAL_SHIFT    WB_FOFB_PROCESSING_REGS_RAM_DATA_OUT_VAL_SHIFT
#define WB_FOFB_PROCESSING_RAM_DATA_OUT_VAL_R(val)   ((val & WB_FOFB_PROCESSING_RAM_DATA_OUT_VAL_MASK) >> WB_FOFB_PROCESSING_RAM_DATA_OUT_VAL_SHIFT)
#define WB_FOFB_PROCESSING_RAM_DATA_OUT_VAL_W(val)   ((val & WB_FOFB_PROCESSING_RAM_DATA_OUT_VAL_MASK) << WB_FOFB_PROCESSING_RAM_DATA_OUT_VAL_SHIFT)

/* RAM address register */

#define WB_FOFB_PROCESSING_REGS_RAM_ADDR 0xcUL
#define WB_FOFB_PROCESSING_REGS_RAM_ADDR_VAL_MASK 0xfffUL
#define WB_FOFB_PROCESSING_REGS_RAM_ADDR_VAL_SHIFT 0

#define WB_FOFB_PROCESSING_REG_RAM_ADDR              WB_FOFB_PROCESSING_REGS_RAM_ADDR
#define WB_FOFB_PROCESSING_RAM_ADDR_VAL              WB_FOFB_PROCESSING_REG_RAM_ADDR
#define WB_FOFB_PROCESSING_RAM_ADDR_VAL_MASK         WB_FOFB_PROCESSING_REGS_RAM_ADDR_VAL_MASK
#define WB_FOFB_PROCESSING_RAM_ADDR_VAL_SHIFT        WB_FOFB_PROCESSING_REGS_RAM_ADDR_VAL_SHIFT
#define WB_FOFB_PROCESSING_RAM_ADDR_VAL_R(val)       ((val & WB_FOFB_PROCESSING_RAM_ADDR_VAL_MASK) >> WB_FOFB_PROCESSING_RAM_ADDR_VAL_SHIFT)
#define WB_FOFB_PROCESSING_RAM_ADDR_VAL_W(val)       ((val & WB_FOFB_PROCESSING_RAM_ADDR_VAL_MASK) << WB_FOFB_PROCESSING_RAM_ADDR_VAL_SHIFT)

struct wb_fofb_processing_regs {
  /* [0x0]: REG (rw) RAM write register */
  uint32_t ram_write;

  /* [0x4]: REG (rw) RAM data input register */
  uint32_t ram_data_in;

  /* [0x8]: REG (ro) RAM data output register */
  uint32_t ram_data_out;

  /* [0xc]: REG (rw) RAM address register */
  uint32_t ram_addr;
};

#endif /* __CHEBY__WB_FOFB_PROCESSING_REGS__H__ */

