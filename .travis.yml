# Travis CI script

language: c
compiler:
  - gcc

services:
  - docker

dist: bionic
os: linux

env:
  - BUILD_TYPE=pure_make BOARD=afcv3_1 EXAMPLES=yes SYSTEM_INTEGRATION=no APP=halcsd
  - BUILD_TYPE=compile_script BOARD=afcv3_1 EXAMPLES=yes SYSTEM_INTEGRATION=no APP=halcsd
  - SONARQUBE=yes BUILD_TYPE=cmake BOARD=afcv3_1
  - BUILD_TYPE=cmake BOARD=ml605
  - BUILD_TYPE=cmake BOARD=afcv3
  - BUILD_TYPE=cmake BOARD=afcv3_1

jobs:
  include:
    - compiler: gcc
      env: OS=ubuntu DIST=bionic BUILD_TYPE=cpack CPACK_BOARDS="ml605" CPACK_GENERATORS="DEB" CPACK_DISTRO_VERSION="+ubu1804" DEPLOY="yes"
    - compiler: gcc
      env: OS=ubuntu DIST=bionic BUILD_TYPE=cpack CPACK_BOARDS="afcv3" CPACK_GENERATORS="DEB" CPACK_DISTRO_VERSION="+ubu1804" DEPLOY="yes"
    - compiler: gcc
      env: OS=ubuntu DIST=bionic BUILD_TYPE=cpack CPACK_BOARDS="afcv3_1" BUILD_PCIEDRIVER_PACKAGE=yes CPACK_GENERATORS="DEB" CPACK_DISTRO_VERSION="+ubu1804" DEPLOY="yes"
    - compiler: gcc
      env: OS=centos DIST=7 BUILD_TYPE=cpack CPACK_BOARDS="ml605" CPACK_GENERATORS="RPM" CPACK_DISTRO_VERSION="+el7" DEPLOY="yes"
    - compiler: gcc
      env: OS=centos DIST=7 BUILD_TYPE=cpack CPACK_BOARDS="afcv3" CPACK_GENERATORS="RPM" CPACK_DISTRO_VERSION="+el7" DEPLOY="yes"
    - compiler: gcc
      env: OS=centos DIST=7 BUILD_TYPE=cpack CPACK_BOARDS="afcv3_1" BUILD_PCIEDRIVER_PACKAGE=yes CPACK_GENERATORS="RPM" CPACK_DISTRO_VERSION="+el7" DEPLOY="yes"
    - compiler: gcc
      env: OS=debian DIST=stretch BUILD_TYPE=cpack CPACK_BOARDS="ml605" CPACK_GENERATORS="DEB" CPACK_DISTRO_VERSION="+deb9" DEPLOY="yes"
    - compiler: gcc
      env: OS=debian DIST=stretch BUILD_TYPE=cpack CPACK_BOARDS="afcv3" CPACK_GENERATORS="DEB" CPACK_DISTRO_VERSION="+deb9" DEPLOY="yes"
    - compiler: gcc
      env: OS=debian DIST=stretch BUILD_TYPE=cpack CPACK_BOARDS="afcv3_1" BUILD_PCIEDRIVER_PACKAGE=yes CPACK_GENERATORS="DEB" CPACK_DISTRO_VERSION="+deb9" DEPLOY="yes"
    - compiler: gcc
      env: OS=debian DIST=buster BUILD_TYPE=cpack CPACK_BOARDS="ml605" CPACK_GENERATORS="DEB" CPACK_DISTRO_VERSION="+deb10" DEPLOY="yes"
    - compiler: gcc
      env: OS=debian DIST=buster BUILD_TYPE=cpack CPACK_BOARDS="afcv3" CPACK_GENERATORS="DEB" CPACK_DISTRO_VERSION="+deb10" DEPLOY="yes"
    - compiler: gcc
      env: OS=debian DIST=buster BUILD_TYPE=cpack CPACK_BOARDS="afcv3_1" BUILD_PCIEDRIVER_PACKAGE=yes CPACK_GENERATORS="DEB" CPACK_DISTRO_VERSION="+deb10" DEPLOY="yes"
    - compiler: gcc
      env: BUILD_TYPE=cmake BOARD=afcv3_1 DEPLOY_PAGES="yes"

# Prerequisite packages provided by OS distro and used "as is"
pkg_deps_prereqs_distro: &pkg_deps_prereqs_distro
  - uuid-dev

# Prerequisite packages that may be built from source or used from
# prebuilt packages of that source (usually not from an OS distro)
# NOTE: For travis, we want also libsodium as a common dependency
pkg_deps_prereqs_source: &pkg_deps_prereqs_source
  - libsodium-dev
  - libzmq3-dev
  - libczmq-dev

pkg_deps_devtools: &pkg_deps_devtools
  - graphviz
  - alien
  - cmake

pkg_deps_prereqs: &pkg_deps_prereqs
  - *pkg_deps_prereqs_source
  - *pkg_deps_prereqs_distro

addons:
  apt:
    packages:
      - *pkg_deps_devtools
      - *pkg_deps_prereqs
  sonarqube:
    organization: lnls-dig
    token:
      secure: "AXQyy5C9NUv1aeIeVuLClBtLDkZsR4MDTFpIkzgrZX5fOVtVjyukeXfxk91GOtR76lGS5aX0WZLz+yMxsjFcGb49wigPSArZ91VE/UUPMZEIenjzObFdlz23a4GcfBtzTqzlChLNj3AaD80Jt9jUWXlLxTg+1p3FjWmmPS4Nu/VmtL9Nk5XdUwWNnptWWgmf0oL1n9ACRtpEhlBWd8HqzgxfGcT+WPo99TqFm/RZkngSMfgy9u4n1EBixxT7xVe0YVx1pke9hKCpHBMypLuARide/ZAcUf9OeuSgRlpa2+cY/Fn1P6MNfPGIaDbCZQ7PjN8CSJFjsGq+WpT3kNEw96+FHGU4z43eih1Cgo4q6XfezVkk5eLq7QQQVPGDN72VIj2oBAvXoWLxqpY5mA95Nw/rWWahsRScYap+gMHIDGpEwd54RvUMbZSgYTxLc74x6VCMW71JwB0UwUPt9UczVvUQirvPP7JtS4Th0WbFMAXPdOJE0l2F5/mBHbJyWPfD9PA5R/EYIpVkEG5kaZeYcBi0yqIXhW+yAlL6oiPNM28b0RNRkg8bsM0JZL7Vz/+b7+4rU4Ac4b47pCRWgnK6CpWL4C8FY9i0hzAyGq4SCoZPUEHY+Q8zMaGWnqcUePGsk/5bIAtu/Ot7OZcdF9HU3Pg0yeqDyXuyP4sG2q5Er3I="
    branches:
      - master
      - devel
      - sonarqube-integration
      - sonarqube-gradle

before_install:
  - git submodule update --init --recursive

install:
  - pip install --user sphinx

#   Build and check this project
script:
  - ./ci_build.sh
  - ./ci_show_err_logs.sh
  - ./ci_scanner.sh

# Generate and deploy documentation
after_success:
  - if [ $DEPLOY_PAGES == "yes" ] ; then cd $TRAVIS_BUILD_DIR/doc && make html; cd $TRAVIS_BUILD_DIR; fi

cache:
  ccache: true
  directories:
    - '$HOME/.sonar/cache'
    - '$HOME/.cache'

before_deploy:
  - . ./ci_deploy.sh

deploy:
  - provider: releases
    token:
      secure: "ammPjSoAPm1RFwXJq2O4JSBHrtOlf/2LNtdB462IpCRek4p9EY/jFEoMhRnYlXWrRdYC0EAk/GSAtCLC7u22G66pACezg1Q0xJdfFSMwo7MWcU2ukSeRoFugw09OuB6E/LZ6NcDVYxXVhht/qqV4Em1N3H/rc+0qkEHUPg1YxjB/YIayuY+LsBQsXXiBBc0NVhNv3L1Lx7uKzvwPnsDtIDSbd8cLmWs3XiHnjbcshhZynHiV3I3eQD0hvCKQ3pK2TItcY7BPPGZbQI6UhVEsjcqDQov2sdw1VhVFSwqlPnpGvLJgvvMBDbdfQfMVdYui0eaSLB52+ZC3HyrQxAJotz43OAZEWzrShts548M2xZDklUhFRu9KovDC8pYNJU+pwumpela9pW3YSBroRwxtfEyeplCaaR0iT0rL9CdQBVRKhmwbVwPsUCKQ1/fngbFRJbSksFf6GXCiykbjkwkPXRdrwdZpff0sUjKmapH1iFBQIQ5k92k7qfd+MFoTgCKovpMWVMpYcBLGK0rxJIZy5gjvuJLX5NwGs+rdDO/oFVVDxXWldcaqDetFYhVZVVKkewdaTDDQb1Pr7FeP8iI6t+JwtsmVjFbrjBs5siN/YhHRzu6Jm0taL7NnktYEXKumlLS0Nn9sQWhKlC86R2pJGKF9+iuweIN1JBaw0y4ScHM="
    file_glob: true
    file: ${HALCS_DEPLOYMENT}
    skip_cleanup: true
    on:
      all_branches: true
      tags: true
      condition: $DEPLOY = "yes"

  - provider: pages
    skip_cleanup: true
    local_dir: doc/_build/html
    token: $GH_TOKEN  # Set in the settings page of your repository, as a secure variable
    keep_history: false
    on:
      all_branches: true
      condition: $DEPLOY_PAGES = "yes"
